#!/bin/bash

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

set -e

if [[ ${PROVISION_TYPE:?} == "new-domain" ]]; then

    taskdata=$(jq -c -n \
        --arg adminuser "" \
        --arg adminpass "${ADMINPASS:?}" \
        --arg realm "${REALM:?}" \
        --arg ipaddress "${IPADDRESS:?}" \
        --arg hostname "${HOSTNAME:?}" \
        --arg nbdomain "${NBDOMAIN:?}" \
        '{
                "provision_type": "new-domain",
                "adminuser": $adminuser,
                "adminpass": $adminpass,
                "realm": $realm,
                "ipaddress": $ipaddress,
                "hostname": $hostname,
                "nbdomain": $nbdomain
        }')

elif [[ ${PROVISION_TYPE:?} == "join-domain" ]]; then

    taskdata=$(jq -c -n \
        --arg adminuser "${ADMINUSER:?}" \
        --arg adminpass "${ADMINPASS:?}" \
        --arg realm "${REALM:?}" \
        --arg ipaddress "${IPADDRESS:?}" \
        --arg hostname "${HOSTNAME:?}" \
        --arg nbdomain "" \
        '{
                "provision_type": "join-domain",
                "adminuser": $adminuser,
                "adminpass": $adminpass,
                "realm": $realm,
                "ipaddress": $ipaddress,
                "hostname": $hostname,
                "nbdomain": $nbdomain
        }')

else
    echo "[ERROR] bad PROVISION_TYPE value" 1>&2
    exit 1
fi

redis-cli <<EOF
LPUSH module/${MID:-samba1}/tasks '{"id":"$(uuidgen)","action":"provision-domain","data":$(jq -R <<<"$taskdata")}'
EOF

echo "[NOTICE] 'provision-domain' task queued. Now run journalctl to check the installation outcome."
